#! /bin/sh
# shellcheck disable=SC2006
# shellcheck disable=SC2236
#
#   Copyright (c) 2019-2022 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' -o "${MULLE_DOCKERIZE_TRACE}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_DOCKERIZE_VERSION=0.2.0

DOCKER="${DOCKER:-docker}"
DOCKERRUNFLAGS="${DOCKERRUNFLAGS:-"-i -t --rm"}"

# MULLE_DOCKERNAME="${MULLE_DOCKERNAME}"
MULLE_DOCKERIZE_MOUNT_POINT="${MULLE_DOCKERIZE_MOUNT_POINT:-/mnt/host}"
MULLE_DOCKERIZE_ENTRY_POINT="${MULLE_DOCKERIZE_ENTRY_POINT:-""}"
MULLE_DOCKERIZE_CLOBBER_ENTRY_POINT="${MULLE_DOCKERIZE_CLOBBER_ENTRY_POINT:-NO}"

get_group_by_id()
{
   gg_gid="$1"
   gg_me="$2"

   if [ ! -z "`command -v getent`" ]
   then
      getent group | sed -n -e "/:${gg_gid}:"'/s/^\([A-Za-z0-9_-]*\).*/\1/p'
   else
      id -ng "${gg_me}"
   fi
}


build_image()
{
   bi_me="${1:-unknown}"
   bi_name="${2:-unknown}"
   bi_imagename="${3:-unknown-unknown}"
   bi_prefix="${4:-~}"

   # local sharedir

   (
      bi_sharedir="${bi_prefix}/share/mulle-dockerize/${bi_name}"
      cd "${bi_sharedir}" || exit 1

      # local userid
      # local groupid
      # local groupname

      # https://stackoverflow.com/questions/4598001/how-do-you-find-the-original-user-through-multiple-sudo-and-su-commands
      bi_userid="`id -u "${bi_me}" `"
      bi_groupid="`id -g "${bi_me}" `"
      bi_groupname="`get_group_by_id "${bi_groupid}" "${bi_me}" `"

      [ -z "${bi_groupname}" ] && echo "Couldn't figure out groupname, will use docker" >&2

      ${SUDO} "${DOCKER}" build  \
                          --build-arg "USERNAME=${bi_me}"  \
                          --build-arg "USERID=${bi_userid}" \
                          --build-arg "GROUPID=${bi_groupid}" \
                          --build-arg "GROUPNAME=${bi_groupname}" \
                          -t "${bi_imagename}" \
                          .
   ) || exit $?
}


prefix="`dirname -- "$0" `"
prefix="`dirname -- "${prefix}" `"

dockername="${MULLE_DOCKERNAME}"
if [ -z "${dockername}" ]
then
   dockername="`basename -- "$0" `"
   actual="`readlink "$0"`"

   if [ ! -z "${actual}" ]
   then
      if [ "${dockername}" = "mulle-dockerize" ]
      then
         dockername="${MULLE_DOCKERNAME}"
      else
         dockername="`basename -- "${actual}" `"
         MULLE_DOCKERIZE_CLOBBER_ENTRY_POINT='YES'
         MULLE_DOCKERIZE_ENTRY_POINT="${MULLE_DOCKERNAME}"
      fi
   fi
fi

me="`logname`"
imagename="${me}-${dockername}"

if ! dockerid="`${SUDO} "${DOCKER}" images -q "${imagename}"`"
then
   exit 1
fi

if [ -z "${dockerid}" ]
then
   build_image "${me}" "${dockername}" "${imagename}" "${prefix}"
fi


if [ "${MULLE_DOCKERIZE_CLOBBER_ENTRY_POINT}" = 'YES' ]
then
   exec ${SUDO} "${DOCKER}" ${DOCKERFLAGS} \
         run ${DOCKERRUNFLAGS}  \
            -v "${PWD}:${MULLE_DOCKERIZE_MOUNT_POINT}" \
            --entry-point "${MULLE_DOCKERIZE_ENTRY_POINT}" \
            "${imagename}" \
            "$@"
fi

exec ${SUDO} "${DOCKER}" ${DOCKERFLAGS} \
      run ${DOCKERRUNFLAGS} \
         -v "${PWD}:${MULLE_DOCKERIZE_MOUNT_POINT}" \
         "${imagename}" \
         "$@"
